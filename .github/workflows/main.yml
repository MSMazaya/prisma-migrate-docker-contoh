name: docker-compose-actions-workflow

on: push

env:
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/loadtest

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Start app
        run: |
          yarn install
          yarn run build
          npx prisma db push
          yarn run start:prod &
          sleep 10
          curl http://localhost:3000
          
        
      - name: Run JMeter Action Load Testing
        uses: rbhadti94/apache-jmeter-action@v0.5.0
        with:
          testFilePath: warehouse-test.jmx
          outputReportsFolder: reports/
          args: "--loglevel INFO"

      - name: Upload File
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports/
